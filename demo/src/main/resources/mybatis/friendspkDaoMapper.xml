<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.SecureMessage.demo.mapper.friendspkDaoMapper" >
  <resultMap id="BaseResultMap" type="com.SecureMessage.demo.model.friendspkDao" >
    <id column="friendspk_id" property="friendspkId" jdbcType="BIGINT" />
    <result column="sender_id" property="senderId" jdbcType="BIGINT" />
    <result column="receiver_id" property="receiverId" jdbcType="BIGINT" />
    <result column="key_sender" property="keySender" jdbcType="VARCHAR" />
    <result column="key_receiver" property="keyReceiver" jdbcType="VARCHAR" />
    <result column="receiver_decided" property="receiverDecided" jdbcType="BIT" />
    <result column="sender_retrieved" property="senderRetrieved" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    friendspk_id, sender_id, receiver_id, key_sender, key_receiver, receiver_decided, 
    sender_retrieved
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.SecureMessage.demo.model.friendspkDaoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friendspk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from friendspk
    where friendspk_id = #{friendspkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from friendspk
    where friendspk_id = #{friendspkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.SecureMessage.demo.model.friendspkDaoExample" >
    delete from friendspk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.SecureMessage.demo.model.friendspkDao" >
    insert into friendspk (friendspk_id, sender_id, receiver_id, 
      key_sender, key_receiver, receiver_decided, 
      sender_retrieved)
    values (#{friendspkId,jdbcType=BIGINT}, #{senderId,jdbcType=BIGINT}, #{receiverId,jdbcType=BIGINT}, 
      #{keySender,jdbcType=VARCHAR}, #{keyReceiver,jdbcType=VARCHAR}, #{receiverDecided,jdbcType=BIT}, 
      #{senderRetrieved,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.SecureMessage.demo.model.friendspkDao" >
    insert into friendspk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendspkId != null" >
        friendspk_id,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="keySender != null" >
        key_sender,
      </if>
      <if test="keyReceiver != null" >
        key_receiver,
      </if>
      <if test="receiverDecided != null" >
        receiver_decided,
      </if>
      <if test="senderRetrieved != null" >
        sender_retrieved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendspkId != null" >
        #{friendspkId,jdbcType=BIGINT},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="keySender != null" >
        #{keySender,jdbcType=VARCHAR},
      </if>
      <if test="keyReceiver != null" >
        #{keyReceiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverDecided != null" >
        #{receiverDecided,jdbcType=BIT},
      </if>
      <if test="senderRetrieved != null" >
        #{senderRetrieved,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update friendspk
    <set >
      <if test="record.friendspkId != null" >
        friendspk_id = #{record.friendspkId,jdbcType=BIGINT},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=BIGINT},
      </if>
      <if test="record.receiverId != null" >
        receiver_id = #{record.receiverId,jdbcType=BIGINT},
      </if>
      <if test="record.keySender != null" >
        key_sender = #{record.keySender,jdbcType=VARCHAR},
      </if>
      <if test="record.keyReceiver != null" >
        key_receiver = #{record.keyReceiver,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverDecided != null" >
        receiver_decided = #{record.receiverDecided,jdbcType=BIT},
      </if>
      <if test="record.senderRetrieved != null" >
        sender_retrieved = #{record.senderRetrieved,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update friendspk
    set friendspk_id = #{record.friendspkId,jdbcType=BIGINT},
      sender_id = #{record.senderId,jdbcType=BIGINT},
      receiver_id = #{record.receiverId,jdbcType=BIGINT},
      key_sender = #{record.keySender,jdbcType=VARCHAR},
      key_receiver = #{record.keyReceiver,jdbcType=VARCHAR},
      receiver_decided = #{record.receiverDecided,jdbcType=BIT},
      sender_retrieved = #{record.senderRetrieved,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.SecureMessage.demo.model.friendspkDao" >
    update friendspk
    <set >
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="keySender != null" >
        key_sender = #{keySender,jdbcType=VARCHAR},
      </if>
      <if test="keyReceiver != null" >
        key_receiver = #{keyReceiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverDecided != null" >
        receiver_decided = #{receiverDecided,jdbcType=BIT},
      </if>
      <if test="senderRetrieved != null" >
        sender_retrieved = #{senderRetrieved,jdbcType=BIT},
      </if>
    </set>
    where friendspk_id = #{friendspkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.SecureMessage.demo.model.friendspkDao" >
    update friendspk
    set sender_id = #{senderId,jdbcType=BIGINT},
      receiver_id = #{receiverId,jdbcType=BIGINT},
      key_sender = #{keySender,jdbcType=VARCHAR},
      key_receiver = #{keyReceiver,jdbcType=VARCHAR},
      receiver_decided = #{receiverDecided,jdbcType=BIT},
      sender_retrieved = #{senderRetrieved,jdbcType=BIT}
    where friendspk_id = #{friendspkId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.SecureMessage.demo.model.friendspkDaoExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friendspk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.SecureMessage.demo.mapper.FriendShipDaoMapper" >
  <resultMap id="BaseResultMap" type="com.SecureMessage.demo.model.FriendShipDao" >
    <id column="sender_id" property="senderId" jdbcType="BIGINT" />
    <id column="reciever_id" property="recieverId" jdbcType="BIGINT" />
    <result column="msg_starting_index" property="msgStartingIndex" jdbcType="INTEGER" />
    <result column="msg_current_index" property="msgCurrentIndex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sender_id, reciever_id, msg_starting_index, msg_current_index
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.SecureMessage.demo.model.FriendShipDaoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.SecureMessage.demo.model.FriendShipDaoKey" >
    select 
    <include refid="Base_Column_List" />
    from friends
    where sender_id = #{senderId,jdbcType=BIGINT}
      and reciever_id = #{recieverId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.SecureMessage.demo.model.FriendShipDaoKey" >
    delete from friends
    where sender_id = #{senderId,jdbcType=BIGINT}
      and reciever_id = #{recieverId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.SecureMessage.demo.model.FriendShipDaoExample" >
    delete from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.SecureMessage.demo.model.FriendShipDao" >
    insert into friends (sender_id, reciever_id, msg_starting_index, 
      msg_current_index)
    values (#{senderId,jdbcType=BIGINT}, #{recieverId,jdbcType=BIGINT}, #{msgStartingIndex,jdbcType=INTEGER}, 
      #{msgCurrentIndex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.SecureMessage.demo.model.FriendShipDao" >
    insert into friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="recieverId != null" >
        reciever_id,
      </if>
      <if test="msgStartingIndex != null" >
        msg_starting_index,
      </if>
      <if test="msgCurrentIndex != null" >
        msg_current_index,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="senderId != null" >
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="recieverId != null" >
        #{recieverId,jdbcType=BIGINT},
      </if>
      <if test="msgStartingIndex != null" >
        #{msgStartingIndex,jdbcType=INTEGER},
      </if>
      <if test="msgCurrentIndex != null" >
        #{msgCurrentIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update friends
    <set >
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=BIGINT},
      </if>
      <if test="record.recieverId != null" >
        reciever_id = #{record.recieverId,jdbcType=BIGINT},
      </if>
      <if test="record.msgStartingIndex != null" >
        msg_starting_index = #{record.msgStartingIndex,jdbcType=INTEGER},
      </if>
      <if test="record.msgCurrentIndex != null" >
        msg_current_index = #{record.msgCurrentIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update friends
    set sender_id = #{record.senderId,jdbcType=BIGINT},
      reciever_id = #{record.recieverId,jdbcType=BIGINT},
      msg_starting_index = #{record.msgStartingIndex,jdbcType=INTEGER},
      msg_current_index = #{record.msgCurrentIndex,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.SecureMessage.demo.model.FriendShipDao" >
    update friends
    <set >
      <if test="msgStartingIndex != null" >
        msg_starting_index = #{msgStartingIndex,jdbcType=INTEGER},
      </if>
      <if test="msgCurrentIndex != null" >
        msg_current_index = #{msgCurrentIndex,jdbcType=INTEGER},
      </if>
    </set>
    where sender_id = #{senderId,jdbcType=BIGINT}
      and reciever_id = #{recieverId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.SecureMessage.demo.model.FriendShipDao" >
    update friends
    set msg_starting_index = #{msgStartingIndex,jdbcType=INTEGER},
      msg_current_index = #{msgCurrentIndex,jdbcType=INTEGER}
    where sender_id = #{senderId,jdbcType=BIGINT}
      and reciever_id = #{recieverId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.SecureMessage.demo.model.FriendShipDaoExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from friends
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>